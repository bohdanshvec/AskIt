exit
q
@user
params
exit
params[:user][:password_reset_token]
User.find_by(email: params[:user][:email]).password_reset_token
User.find_by(email: params[:user][:email]).password_reset_token_sent_at
user
@user
q
Time.current
Time.now
User.find_by(email: params[:user][:email]).password_reset_token_sent_at
params[:user][:password_reset_token]
User.find_by(email: params[:user][:email]).password_reset_token
User.find_by(email: params[:user][:email])
User.find_by(password_reset_token: params[:user][:password_reset_token])
User.find_by(email: params[:user][:email])
User.find_by(email: params[:user][:email], password_reset_token: params[:user][:password_reset_token])
User.find_by(email: params[:user][:email], password_reset_token: params[:user][:password_reset_token]
params[:user][:email]
params[:user]
params[:email]
params
@user
q
@question.tags
@question
@question.errors
errors
exit
учше
q
@commentable
@commentable.question
@commentable.is_a?(Question)
Question.name
[Question, Answer].detect { |c| params["#{c.name.underscore}_id"] }
@commentable.comments
@commentable.comment
@commentable.comments.find(params[:id])
@question
@commentable
@comment
q
@question
@commentable
@comment
q
user_from_session
session[:user_id]
current_user
exit
user_signed_in?
current_user
exit
user_signed_in?
current_user
q
params[:email]
q
params["password"]
params["email"]
params[email]
params.password
params
q
answer.id
q
answer.id
q
й
@errors.errors.full_messages
@question.errors.full_messages
@errors.full_messages
@errors.any?
exit
@question.errors.full_messages.class
@question.errors.full_messages
@question.errors.any?
q
@question.errors.full_messages
q
@question.errors.full_messages
